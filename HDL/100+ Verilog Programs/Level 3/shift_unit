`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 27.11.2024 16:50:16
// Design Name: 
// Module Name: airthmeticshift_8b
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////
//  Modes :     LSR, LSL, ASR, ASR, RR, RL 

module shift_unit(
    input wire [7:0] din,
    input wire [2:0] mode,
    input wire  clk, rst_,
    output reg [7:0] dout
);

    always@(posedge clk or negedge rst_) begin
        if (!rst_) begin
            dout <= 0;
        end
        else begin
            case (mode)
                3'b000: dout<= din >> 1; // LSR Logical Shift Right
                3'b001: dout<= din << 1; // LSL Logical Shift Left
                3'b010: begin
                    dout <= din >>> 1; // ASR Arithmetic Shift Right
                end
                3'b011: begin
                    dout <= din <<< 1; // ASL Arithmetic Shift Left
                end
                3'b100: begin
                    dout <= {din[0],{din>>1}[7:1]}; // Rotate Right
                end
                3'b101: begin
                    dout <= {{din>>1}[6:0],din[7]}; // Rotate Left
                end
                default:
                dout <= din;
            endcase
        end
    end

endmodule
